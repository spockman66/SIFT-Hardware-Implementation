/*
 * hme_plic.c
 *
 *  Created on: 2021Äê11ÔÂ10ÈÕ
 *      Author: Administrator
 */

#include "hme_plic.h"



static uint16_t PlicClaimGet()
{
	uint16_t usClaimVal = EN_DEV_ID_0;

    return usClaimVal;
}

static void PlicFinishNotice(uint8_t usIntrId)
{

}



static uint16_t DevIdTableGet(uint16_t usIntrId)
{
	uint16_t usDevId = EN_DEV_ID_MAX;

	return usDevId;
}



uint16_t DevIntrIdTableGet(uint16_t usDevId)
{
	uint16_t usIntrId = 0;

	return usIntrId;
}

uint32_t DevPriorityOffsetTableGet(uint16_t usDevId)
{
	uint32_t ulPriorityOffset = 0;


	return ulPriorityOffset;
}


uint32_t DevPendingOffsetTableGet(uint16_t usDevId)
{
	uint32_t ulPendingOffset = 0;


	return ulPendingOffset;
}

uint32_t DevIntrEnTableGet(uint16_t usDevId)
{
	uint32_t ulEnable = 0;


	return ulEnable;
}

EN_RET_TYPE IntrPrioritySet(uint16_t usDevId, uint8_t ucPriority)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}

EN_RET_TYPE IntrPriorityGet(uint16_t usDevId)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}

EN_RET_TYPE IntrPendingGet(uint16_t usDevId)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}

EN_RET_TYPE PlicEnableSet(uint32_t ulEnable)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}

uint32_t PlicEnableGet(void)
{
	uint32_t ulEnableVal = 0;

	return ulEnableVal;
}

EN_RET_TYPE PlicThresholdSet(EN_PRIORITY enIntrThreshold)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}

uint8_t PlicThresholdGet(void)
{
	uint8_t ucThreshold = (uint8_t)EN_PRIORITY_MAX;


    return ucThreshold;
}

EN_RET_TYPE PlicIntrHandleRegister(PST_PLIC_DEV_PARAM pstIntrAttr, uint16_t usDevId)
{
	EN_RET_TYPE enRetVal = EN_RET_TYPE_SUCCESS;

	return enRetVal;
}


void ExternalInterruptExcute()
{

}
